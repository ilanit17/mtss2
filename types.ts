
export interface SchoolChallenge {
  category: string;
  text: string;
}

export interface School {
  name: string;
  tier: 1 | 2 | 3;
  challenges: SchoolChallenge[];
  relevantChallenges?: SchoolChallenge[]; // For Tier 3 relevant display
  tier3Category?: 'relevant' | 'other'; // For categorizing Tier 3 schools
}

export interface ExtractedData {
  issueFile: boolean;
  dataFile: boolean;
  challenge: string; // Short name / category of the main issue
  main_issue_question: string;
  vision: string;
  schools: School[];
}

export interface Tier1Intervention {
  outcomes: string[];
}

export interface Tier2Group {
  id: string;
  name: string;
  outcomes: string[];
  schools: string[]; // school names
  challengeText?: string; // For suggested groups
}

export interface Tier3Intervention {
  outcomes: string[];
}

export interface InterventionPlan {
  mainGoal: string;
  smartObjectives: string[];
  tier1: Tier1Intervention;
  tier2Groups: Tier2Group[];
  tier3: Tier3Intervention;
}

export interface CoreActionSuggestion {
  name: string;
  category: string;
  tier: string;
  description: string;
  keywords: string[];
}

export interface CoreAction {
  id: string;
  name: string;
  description: string;
  category: string;
  tier: string;
  targetAudience: string;
  frequency: string;
  isAutoSelected?: boolean;
  sourceOutcome?: string;
}

export interface PartnerSuggestion {
  name: string;
  category: string;
  role: string;
}

export interface Partner {
  id: string;
  name: string;
  category: string;
  role: string;
}

export interface ResourceSuggestion {
  name: string;
  category: string;
  details: string;
}

export interface Resource {
  id: string;
  name: string;
  category: string;
  details: string;
}

export type TaskType = 'תכנון' | 'ביצוע' | 'מעקב';

export interface OperationalTask {
  id: string;
  task: string;
  responsible: string; // partner name or supervisor
  startDate: string; // YYYY-MM-DD
  endDate: string; // YYYY-MM-DD
  status: string; // one of TASK_STATUSES
  actionId: string; // CoreAction id
  isAutoGenerated?: boolean;
  taskType?: TaskType;
  sourceActionName?: string; // Name of the CoreAction this task was generated from
}

export interface SupportPlan {
  coreActions: CoreAction[];
  partners: Partner[];
  resources: Resource[];
  operationalPlan: OperationalTask[];
}

export type MessageType = 'success' | 'error' | null;

export interface AppMessage {
  type: MessageType;
  text: string | null;
}

// For Step2MTSS suggestions
export interface ChallengeDetail extends SchoolChallenge {
  schoolName: string;
}

export interface CategorizedTier3Schools {
  relevant: School[];
  other: School[];
}

export interface GoalSuggestions {
    mainGoalSuggestions: string[];
    smartObjectivesSuggestions: string[];
    tier1Suggestions: string[]; // For Step 2 Tier 1
}
